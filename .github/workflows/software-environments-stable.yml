name: Create Coiled software environments

on:
  push:
    branches: main
    paths:
      - environments/**
  workflow_dispatch:

jobs:
  build:
    name: Python ${{ matrix.python-version }}, Runtime ${{ matrix.runtime-version }}, ${{ matrix.server }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        runtime-version: ["0.1.0", "0.1.1"]
        server: ["https://cloud.coiled.io", "https://staging.coiledhq.com"]
        include:
          - server: "https://cloud.coiled.io"
            token-name: COILED_BENCHMARK_BOT_TOKEN
          - server: "https://staging.coiledhq.com"
            token-name: COILED_STAGING_BENCHMARK_BOT_TOKEN

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v1

      - name: Install Coiled
        run: python -m pip install coiled

      - name: Create environment variables
        run: |
          # Coiled software environment names can't contain "." or uppercase characters
          export RUNTIME_VERSION_FORMATTED=$(echo "${{ matrix.runtime-version }}" | sed 's/\./-/g' )
          export PYTHON_VERSION_FORMATTED=$(echo "${{ matrix.python-version }}" | sed 's/\.//g' )
          export COILED_SOFTWARE_ENV_NAME=coiled-runtime-$RUNTIME_VERSION_FORMATTED-py$PYTHON_VERSION_FORMATTED
          
          # Put COILED_SOFTWARE_ENV_NAME into $GITHUB_ENV so it can be used in subsequent workflow steps
          echo $COILED_SOFTWARE_ENV_NAME
          echo COILED_SOFTWARE_ENV_NAME=$COILED_SOFTWARE_ENV_NAME >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Build and push runtime ${{ matrix.runtime-version }} python ${{ matrix.python-version }}
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: coiled/coiled-runtime:${{ matrix.runtime-version }}-py${{ matrix.python-version }}
          build-args: ENV_FILENAME=${{ env.COILED_SOFTWARE_ENV_NAME }}
          platforms: linux/amd64,linux/arm64

      - name: Create Runtime ${{ matrix.runtime-version }} Python ${{ matrix.python-version }} ${{ matrix.server }} software environment
        env:
          DASK_COILED__SERVER: ${{ matrix.server }}
          DASK_COILED__TOKEN: ${{ secrets[matrix.token-name] }}
        run: |
          coiled env create --name coiled/${{ env.COILED_SOFTWARE_ENV_NAME }} --container coiled/coiled-runtime:${{ matrix.runtime-version }}-py${{ matrix.python-version }}