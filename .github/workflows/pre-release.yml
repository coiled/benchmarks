name: Pre-release upload

on:
  pull_request:
  schedule:
    # Runs at 00:01 every day.
    - cron: "1 0 * * *"

concurrency:
  # Include `github.event_name` to avoid pushes to `main` and
  # scheduled jobs canceling one another
  group: ${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  # Required shell entrypoint to have properly activated conda environments
  run:
    shell: bash -l {0}

jobs:
  build:
    name: Build and upload
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up python
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          use-mamba: true
          python-version: 3.9
          environment-file: ci/environment.yml
      - name: Install dependencies
        run: |
          mamba install boa conda-verify
          which python
          pip list
          mamba list
      - name: Get updated meta
        run: |
          # set os env
          export PRE_RELEASE="true"

          # Put PRE_RELEASE into $GITHUB_ENV so it can be used in subsequent workflow steps
          echo PRE_RELEASE=$PRE_RELEASE >> $GITHUB_ENV

          # suffix for nightly package versions
          export VERSION_SUFFIX=a`date +%y%m%d`

          # Put VERSION_SUFFIX into $GITHUB_ENV so it can be used in subsequent workflow steps
          echo VERSION_SUFFIX=$VERSION_SUFFIX >> $GITHUB_ENV

          # Create pre-release.yaml file
          python ci/create_latest_runtime_meta.py
          export RECIPE_FILE=pre_release/meta.yaml
          cat $RECIPE_FILE

          # Put RECIPE_FILE into $GITHUB_ENV so it can be used in subsequent workflow steps
          echo RECIPE_FILE=$RECIPE_FILE >> $GITHUB_ENV
      - name: Build conda package
        run: |
          conda mambabuild $RECIPE_FILE\
                --output-folder pre_release/conda \
                --no-anaconda-upload
        
          ls pre_release/conda/noarch/
      # - name: Upload conda package
      #   env:
      #     ANACONDA_API_TOKEN: ${{ secrets.COILED_UPLOAD_TOKEN}}
      #   run: |
      #     # install anaconda for upload
      #     mamba install anaconda-client
      #     anaconda upload --label dev pre_release/conda/noarch/*.tar.bz2
